import "dotenv/config";
import express from "express";
import { Client, GatewayIntentBits, EmbedBuilder, Events } from "discord.js";
import { WebcastPushConnection } from "tiktok-live-connector";

/* ---------- ENV ---------- */
const {
  PORT = 8080,
  DISCORD_TOKEN,
  CHANNEL_ID, // ‡πÅ‡∏ä‡∏ô‡πÅ‡∏ô‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® Live Start/End
  TIKTOK_USERNAME, // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ TikTok (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ @)
} = process.env;

if (!DISCORD_TOKEN || !CHANNEL_ID || !TIKTOK_USERNAME) {
  console.error(
    "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà ENV ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö: DISCORD_TOKEN, CHANNEL_ID, TIKTOK_USERNAME"
  );
  process.exit(1);
}

/* ---------- Discord client ---------- */
const client = new Client({ intents: [GatewayIntentBits.Guilds] });

client.once(Events.ClientReady, (c) => {
  console.log(`ü¶Ä ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠ ${c.user.tag}`);
});

/* ---------- TikTok live tracker ---------- */
let isLive = false;
let lastLiveStartAt = null; // number (ms)
let lastLiveEndAt = null; // number (ms)
let lastRoomCover = null; // url string or null

// ‡∏≠‡∏¢‡πà‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á connection ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏ã‡∏™
const tiktok = new WebcastPushConnection(TIKTOK_USERNAME);

/* ---------- Helper: ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ Discord ---------- */
async function sendToDiscord(payload) {
  const ch = await client.channels.fetch(CHANNEL_ID).catch(() => null);
  if (!ch?.isTextBased?.()) {
    console.error("‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: CHANNEL_ID ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà text channel");
    return;
  }
  await ch.send(payload);
}

/* ---------- ‡∏ò‡∏µ‡∏°‡∏õ‡∏π‡πÇ‡∏Å‡∏∞: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡πà‡∏° ---------- */
function pick(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}
function clamp(s, max) {
  return (s ?? "").toString().slice(0, max);
}

const seafoodStartLines = (u) => [
  `ü¶Ä ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡πÇ‡∏ú‡∏•‡πà‡∏°‡∏≤‡∏ó‡∏±‡∏Å~ **@${u}** ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏•‡∏ü‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤‡∏≤ üíñ`,
  `‚ú® ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÄ‡∏•‡∏¢~ ‡∏°‡∏≤‡∏î‡∏π **@${u}** ‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞! üåä`,
  `üí¨ ‡πÄ‡∏°‡∏µ‡πâ‡∏¢‡∏ß..‡πÄ‡∏≠‡πâ‡∏¢! ‡∏Å‡πâ‡∏≤‡∏°‡∏õ‡∏π‡∏û‡∏£‡πâ‡∏≠‡∏°! **@${u}** ‡πÑ‡∏•‡∏ü‡πå‡∏™‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤‡∏≤ >w<`,
  `üåü ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏î‡∏µ‡∏î‡∏Å‡πâ‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏µ‡πÉ‡∏à! **@${u}** ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏•‡∏ü‡πå‡πÅ‡∏•‡πâ‡∏ß!`,
  `üç§ ‡∏´‡∏¥‡∏ß‡∏ã‡∏µ‡∏ü‡∏π‡πâ‡∏î‡∏à‡∏±‡∏á~ ‡πÅ‡∏ï‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏≠‡∏¢‡∏≤‡∏Å‡∏î‡∏π‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤~`,
  `üåä ‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡∏ã‡∏±‡∏î‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß~ ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏£‡∏µ‡∏ö‡∏°‡∏≤‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ **@${u}** ‡πÑ‡∏•‡∏ü‡πå‡∏≠‡∏¢‡∏π‡πà‡∏à‡πâ‡∏≤!`,
  `üéâ ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡πÄ‡∏Ñ‡∏≤‡∏∞‡∏Å‡πâ‡∏≤‡∏°‡∏î‡∏±‡∏á ‡πÜ~ **@${u}** ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏ï‡∏£‡∏µ‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤‡∏≤`,
  `üíñ ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏¢‡∏¥‡πâ‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á~ ‡πÑ‡∏î‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏π‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß`,
  `‚òÄÔ∏è ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏î‡πÉ‡∏™‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ **@${u}** ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏•‡∏ü‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤`,
  `‚≠ê ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô‡∏°‡∏≤‡∏Å~ ‡∏°‡∏≤‡∏™‡∏ô‡∏∏‡∏Å‡∏Å‡∏±‡∏ö **@${u}** ‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢!`,

  // ü§™ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏≤‡∏¢‡∏Æ‡∏≤
  `ü¶Ä ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏¥‡∏ô‡∏Ç‡πâ‡∏≤‡∏ß‚Ä¶ ‡∏≠‡πâ‡∏≤‡∏ß! **@${u}** ‡πÑ‡∏•‡∏ü‡πå‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏µ‡∏ö‡∏ß‡∏≤‡∏á‡∏ä‡πâ‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô!`,
  `üòÇ ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏≠‡∏ô‡∏ï‡∏∞‡πÅ‡∏Ñ‡∏á ‡∏î‡∏µ‡∏î‡∏Å‡πâ‡∏≤‡∏°‡∏ï‡∏Å‡πÉ‡∏à‡πÄ‡∏•‡∏¢~ **@${u}** ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß`,
  `ü§î ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏Å‡∏∞‡∏à‡∏∞‡πÑ‡∏õ‡∏ü‡∏¥‡∏ï‡πÄ‡∏ô‡∏™ ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏î‡∏π **@${u}** ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤~`,
  `ü¶Ä ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏ö‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡πà‡∏≤ ‚Äú‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏î‡∏π‡πÑ‡∏•‡∏ü‡πå **@${u}** ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÇ‡∏î‡∏ô‡∏´‡∏ô‡∏µ‡∏ö‡∏Å‡πâ‡∏≤‡∏°‡∏ô‡∏∞!‚Äù`,
  `ü§£ ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏î‡∏µ‡∏î‡∏Å‡πâ‡∏≤‡∏°‡∏à‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏û‡∏±‡∏á‚Ä¶ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà **@${u}** ‡πÑ‡∏•‡∏ü‡πå‡∏™‡∏î‡πÅ‡∏•‡πâ‡∏ß`,
];

const seafoodEndLines = (u) => [
  `ü¶Ä ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡πâ‡∏≤‡∏°~ ‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤‡∏≤ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏î‡∏π‡∏Å‡∏±‡∏ô üíï`,
  `üåô ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏ö‡∏≠‡∏Å‡∏ù‡∏±‡∏ô‡∏î‡∏µ~ ‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏õ‡∏¥‡∏î‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤‡∏≤`,
  `üíñ ‡∏Å‡πâ‡∏≤‡∏°‡∏õ‡∏π‡∏û‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô~ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏ô‡∏∏‡∏Å‡∏°‡∏≤‡∏Å ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö **@${u}** ‡∏ô‡πâ‡∏≤‡∏≤`,
  `‚ú® ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏™‡πà‡∏á‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢~ ‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô!`,
  `üåä ‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡∏ó‡∏∞‡πÄ‡∏•‡∏™‡∏á‡∏ö‡πÅ‡∏•‡πâ‡∏ß~ ‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏à‡∏ö‡∏•‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡πÑ‡∏ß‡πâ‡∏°‡∏≤‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞`,
  `ü¶Ä ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏•‡∏¢~ ‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡πâ‡∏≤`,
  `‚≠ê ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏î‡∏µ‡∏î‡∏Å‡πâ‡∏≤‡∏°‡∏ó‡∏¥‡πâ‡∏á‡∏ó‡πâ‡∏≤‡∏¢~ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}**`,
  `üçÄ ‡∏à‡∏ö‡πÑ‡∏•‡∏ü‡πå‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÉ‡∏à‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏™‡∏°‡∏≠~ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏î‡∏π **@${u}** ‡∏ô‡πâ‡∏≤‡∏≤`,
  `üì∫ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏õ‡∏¥‡∏î‡∏à‡∏≠‡πÅ‡∏•‡πâ‡∏ß~ ‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à üíï`,
  `üå∏ ‡∏õ‡∏π‡πÇ‡∏Å‡∏∞‡πÇ‡∏ö‡∏Å‡∏Å‡πâ‡∏≤‡∏°‡∏ö‡πä‡∏≤‡∏¢‡∏ö‡∏≤‡∏¢~ ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡πÑ‡∏•‡∏ü‡πå‡∏Ç‡∏≠‡∏á **@${u}** ‡∏ô‡∏∞`,
];

/* ---------- Embed ---------- */
function buildStartEmbed(u, info = {}) {
  const title = clamp(info?.title || `@${u} ‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏£‡∏±‡∏ß‡∏ã‡∏µ‡∏ü‡∏π‡πâ‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤~`, 256);
  const cover = info?.cover || info?.thumbnail || info?.image || lastRoomCover;
  const startAt = info?.started_at
    ? Math.floor(new Date(info.started_at).getTime() / 1000)
    : Math.floor((lastLiveStartAt ?? Date.now()) / 1000);

  const desc = [
    pick(seafoodStartLines(u)),
    "",
    `‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠: <t:${startAt}:R>`,
  ].join("\n");

  const e = new EmbedBuilder()
    .setColor(0xff7043)
    .setTitle(`üç§ üî¥ LIVE: ${title}`)
    .setURL(`https://www.tiktok.com/@${u}/live`)
    .setDescription(desc)
    .setTimestamp();

  if (cover && /^https?:\/\//i.test(cover)) e.setImage(cover);
  return e;
}
function buildEndEmbed(u, info = {}) {
  const mins = info?.duration_minutes ?? info?.minutes ?? null;
  let desc = pick(seafoodEndLines(u));
  if (mins != null) desc += `\n‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏•‡∏ü‡πå: **${mins} ‡∏ô‡∏≤‡∏ó‡∏µ** ‚è±Ô∏è`;
  desc += `\n‡πÑ‡∏ß‡πâ‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏°‡∏≤‡∏ã‡∏î‡∏ô‡πâ‡∏≥‡∏ã‡∏∏‡∏õ‡∏ó‡∏∞‡πÄ‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏ô‡∏∞ üåä`;

  return new EmbedBuilder()
    .setColor(0xffcc80)
    .setTitle("üç≤ ‚ö´Ô∏è ‡πÑ‡∏•‡∏ü‡πå‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß")
    .setDescription(desc)
    .setTimestamp();
}

/* ---------- ‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏à‡∏≤‡∏Å TikTok (‡∏£‡∏µ‡∏•‡πÑ‡∏ó‡∏°‡πå) ---------- */
tiktok.on("connected", (state) => {
  console.log("‚úÖ TikTok connected roomId:", state?.roomId);
});

tiktok.on("streamStart", (data) => {
  isLive = true;
  lastLiveStartAt = Date.now();
  lastRoomCover =
    data?.roomInfo?.cover ?? data?.roomInfo?.background ?? lastRoomCover;

  sendToDiscord({
    content: `üîî **@${TIKTOK_USERNAME}** ‡∏Å‡∏≥‡∏•‡∏±‡∏á LIVE ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤~ ü¶Äüåä`,
    embeds: [buildStartEmbed(TIKTOK_USERNAME, data?.roomInfo)],
  }).catch(console.error);
});

tiktok.on("streamEnd", () => {
  isLive = false;
  lastLiveEndAt = Date.now();

  sendToDiscord({ embeds: [buildEndEmbed(TIKTOK_USERNAME)] }).catch(
    console.error
  );
});

tiktok.on("disconnected", () => {
  console.warn("‚ö†Ô∏è TikTok disconnected, will retry‚Ä¶");
  scheduleReconnect();
});

/* ---------- ‡∏£‡∏µ‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ô‡∏Å‡∏ï‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (exponential backoff) ---------- */
let retryMs = 5_000;
async function connectForever() {
  try {
    await tiktok.connect(); // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏•‡∏ü‡πå ‡∏≠‡∏≤‡∏à throw ‡πÑ‡∏î‡πâ
    retryMs = 5_000; // ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï backoff
  } catch (e) {
    console.warn("‚ùå connect error:", e?.message ?? e);
    scheduleReconnect();
  }
}
function scheduleReconnect() {
  setTimeout(connectForever, retryMs);
  retryMs = Math.min(retryMs * 2, 5 * 60_000); // ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏ô‡∏≤‡∏ó‡∏µ
}

/* ---------- Start ---------- */
await client.login(DISCORD_TOKEN);
connectForever();

/* ---------- Express (health check) ---------- */
const app = express();
app.get("/", (_req, res) => res.send("OK"));
app.listen(PORT, () => console.log(`üåê Health server running at :${PORT}`));
